{load_file("nrngui.hoc")}
objectvar save_window_, rvp_
objectvar scene_vector_[4]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}

//Begin ArtCellGUI[0]
{
load_file("netbild.hoc")
}
ocbox_ = new ArtCellGUI(1)
{object_push(ocbox_)}
{
tobj = new MechanismStandard("VecStim")
}
{append(tobj, "vs0_1")}
{
tobj = new MechanismStandard("VecStim")
}
{append(tobj, "vs0_2")}
{
tobj = new MechanismStandard("VecStim")
}
{append(tobj, "vs0_3")}
{
tobj = new MechanismStandard("VecStim")
}
{append(tobj, "vs0_4")}
{
tobj = new MechanismStandard("VecStim")
}
{append(tobj, "vs0_5")}
{
tobj = new MechanismStandard("VecStim")
}
{append(tobj, "vs0_6")}
{
tobj = new MechanismStandard("VecStim")
}
{append(tobj, "vs0_7")}
{
tobj = new MechanismStandard("VecStim")
}
{append(tobj, "vs0_8")}
{object_pop()}
{
ocbox_.map("ArtCellGUI[0]", 73, 156, 351, 283.5)
}
objref ocbox_
//End ArtCellGUI[0]

//Begin NetGUI[0]
{
load_file("netbild.hoc")
}
{ocbox_ = new NetGUI(1)}
{object_push(ocbox_)}
{mapold2new = new Vector()  missing = new List()}
original_type("vs0_1")
original_type("vs0_2")
original_type("vs0_3")
original_type("vs0_4")
original_type("vs0_5")
original_type("vs0_6")
original_type("vs0_7")
original_type("vs0_8")

newnode(0, -30, 950)
newnode(1, -30, 900)
newnode(2, -30, 850)
newnode(3, -30, 800)
newnode(4, -30, 750)
newnode(5, -30, 700)
newnode(6, -30, 650)
newnode(7, -30, 600)
{create_ = 1  create1()}
{g.size(-584.324,584.324,-730.337,730.337)}
{set_alias(0)}
{object_pop()}
{
ocbox_.map("NetGUI[0]", 330, 390, 570.6, 586.8)
}
objref ocbox_
//End NetGUI[0]


//Begin SpikePlot[0] for NetData[0] staf/elburg
{
load_file("netbild.hoc")
}
{ocbox_ = new SpikePlot(NetData[0],1)}
{object_push(ocbox_)}
mode = 1
spikeplotstyle= 0
marksize= 4
markcolor= 1
useline= 1
fwindow = 100
binwidth = 0.1
build()
subset_start=0
subset_end = 1
{g.size(0,5,0,2)}
{object_pop()}
{
ocbox_.map("SpikePlot[0] for NetData[0] staf/elburg", 888, 30, 347.4, 592.2)
}
objref ocbox_
//End SpikePlot[0] for NetData[0] staf/elburg

{
xpanel("RunControl", 0)
v_init = -65
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 0
xvalue("t","t", 2 )
tstop = 4000
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.1
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 10
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
xcheckbox("Quiet",&stdrun_quiet,"")
realtime = 0
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(12,102)
}

//Begin VariableTimeStep
{
ocbox_ = NumericalMethodPanel[0]
}
{object_push(ocbox_)}
{
atol_ = 0.001  CVode[0].atol(atol_)
restore(0, 1)
}
{object_pop()}
{
ocbox_.map("VariableTimeStep", 6, 504, 315.9, 365.4)
}
objref ocbox_
//End VariableTimeStep

objectvar scene_vector_[1]
{doNotify()}
