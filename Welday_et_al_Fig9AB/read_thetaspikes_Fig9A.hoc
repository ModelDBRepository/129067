//This file reads in four theta cell spike trains from twelve disk files:
// lintrack25_1.dat through lintrack25_8.dat

spikefile.ropen("lintrack25_1.dat")  	//open file containing spike times of one theta cell
evec[0] = new Vector()			//create a new vector to store spike time stamps
evec[0].scanf(spikefile)		//read in spike times from the file
vs0_1_VecStim[0].pp.play(evec[0])	//play the spike times into a VecStim object during the simulation
pplist.append(vs0_1_VecStim[0].pp)	//append the VecStim to the pp list
spikefile.close()			//close the data file

spikefile.ropen("lintrack25_2.dat")	//repeat for each additional theta cell input...
evec[1] = new Vector()
evec[1].scanf(spikefile)
vs0_2_VecStim[0].pp.play(evec[1])
pplist.append(vs0_2_VecStim[0].pp)
spikefile.close()

spikefile.ropen("lintrack25_3.dat")
evec[2] = new Vector()
evec[2].scanf(spikefile)
vs0_3_VecStim[0].pp.play(evec[2])
pplist.append(vs0_3_VecStim[0].pp)
spikefile.close()

spikefile.ropen("lintrack25_4.dat")  	//open file containing spike times of one theta cell
evec[3] = new Vector()			//create a new vector to store spike time stamps
evec[3].scanf(spikefile)		//read in spike times from the file
vs0_4_VecStim[0].pp.play(evec[3])	//play the spike times into a VecStim object during the simulation
pplist.append(vs0_4_VecStim[0].pp)	//append the VecStim to the pp list
spikefile.close()			//close the data file

spikefile.ropen("lintrack25_5.dat")	//repeat for each additional theta cell input...
evec[4] = new Vector()
evec[4].scanf(spikefile)
vs0_5_VecStim[0].pp.play(evec[4])
pplist.append(vs0_5_VecStim[0].pp)
spikefile.close()

spikefile.ropen("lintrack25_6.dat")
evec[5] = new Vector()
evec[5].scanf(spikefile)
vs0_6_VecStim[0].pp.play(evec[5])
pplist.append(vs0_6_VecStim[0].pp)
spikefile.close()

spikefile.ropen("lintrack25_7.dat")  	//open file containing spike times of one theta cell
evec[6] = new Vector()			//create a new vector to store spike time stamps
evec[6].scanf(spikefile)		//read in spike times from the file
vs0_7_VecStim[0].pp.play(evec[6])	//play the spike times into a VecStim object during the simulation
pplist.append(vs0_7_VecStim[0].pp)	//append the VecStim to the pp list
spikefile.close()			//close the data file

spikefile.ropen("lintrack25_8.dat")	//repeat for each additional theta cell input...
evec[7] = new Vector()
evec[7].scanf(spikefile)
vs0_8_VecStim[0].pp.play(evec[7])
pplist.append(vs0_8_VecStim[0].pp)
spikefile.close()
